    server {
        listen 80 default_server;
        listen 443 default_server;
        return 403;
    }

    server {
        listen 80;
        listen 443;

        server_name ~^www.(?<domain>.+)$;

        location / {
        # a resovler definition is needed!
        # because we use Docker, we have to use the internal Docker DNS resolver IP which is 127.0.0.11.
        # (notice)the internal AWS DNS resolver IP is your AWS VPC network range plus two.
        # To further remove the downtime, reduce the resolve cache time to 10 seconds instead of the default 5 minutes.
            resolver 127.0.0.11 ipv6=off;
            proxy_pass http://frontend:5173;

            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        listen 443;

        server_name ~^api.(?<domain>.+)$;
        
        ###############################################################
        # serve static files (images,js) directly
        location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|txt|md|doc|pdf|ico)$ {
            root /var/html/api;
            access_log      off;
            # expires 30d;
        }

        location ~* ^.+.(html)$ {
            root /var/html/api;
            access_log      off;
        }

        location / {
            root /var/html/api;
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        ###############################################################
        # pass the PHP scripts to FastCGI server listening on 127.0.0.11:9000
        #
        location ~ ^/index\.php(/|$) {
            root /var/app/public;
            
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            resolver 127.0.0.11 ipv6=off;

            # Mitigate https://httpoxy.org/ vulnerabilities
            fastcgi_param HTTP_PROXY "";

            # Bigger buffer size to handle cache invalidation headers expansion
            fastcgi_buffer_size 32k;
            fastcgi_buffers 8 16k;

            fastcgi_index index.php;
            fastcgi_pass php:9000;
            include fastcgi_params;

            # When you are using symlinks to link the document root to the
            # current version of your application, you should pass the real
            # application path instead of the path to the symlink to PHP
            # FPM.
            # Otherwise, PHP's OPcache may not properly detect changes to
            # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
            # for more information).
            # fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            # fastcgi_param DOCUMENT_ROOT $realpath_root;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            # Prevents URIs that include the front controller. This will 404:
            # http://domain.tld/index.php/some-path
            # Remove the internal directive to allow URIs like this
            internal;
        }
    }
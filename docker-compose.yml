version: "3.4"
# [] TRUSTED HOSTS has to be a part of .env
services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
      args:
        IMAGE_NAME: webfux/node
        IMAGE_TAG: 1.0.0
    depends_on:
      - php
    # [] environment is missing
    # [] ...TRUSTED_HOSTS
    # port to published has to be identically to VITEs exposed port
    # same port is used in nginx to proxy to frontend:5173
    # default: 5173
    ports:
      - target: 5173
        published: 5173
    volumes:
      - ./frontend:/var/www/html
      # npm install has issues creating symlinks to mounted folders
      # to prevent this: mount node_modules back to container
      - /var/www/html/node_modules/
    # image is alpine base: command => sh -c
    # - npm install (requires package.json)
    # - npm run dev
    command: sh -c "npm install && npm run dev"
    extra_hosts:
      - host.docker.internal:host-gateway

  php:
    container_name: php
    build:
      context: ./api
      dockerfile: Dockerfile.local
      args:
        IMAGE_NAME: webfux/php82-fpm
        IMAGE_TAG: 1.0.0
    depends_on:
      - database
    environment:
      # given arguments overwrite configuration in api/.env
      # can also be set in api/.env
      TRUSTED_HOSTS: localhost|api.dev.webfux.io|www.dev.webfux.io
      DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?serverVersion=${MYSQL_VERSION}
    volumes:
      - ./api/.deploy/php/docker-entrypoint.sh:/usr/local/bin/docker-entrypoint.sh
      - ./api/.deploy/php/docker-healthcheck.sh:/usr/local/bin/docker-healthcheck.sh
      # mounted folder has to be identically to nginx directive AND workdir in Dockerfile
      - ./api:/var/app
      - ./api/vendor:/var/app/vendor
      # prevent mounting folders outside docker
      - /var/app/vendor
      - /var/app/var
    # [] inside FPM there is a listen to 0.0.0.0:9000
    expose:
      - 9000
    # docker-entrypoint also run (if not prod)
    # - composer install
    # ...waits for DATABASE ready
    # - php bin/console doctrine:migrations:migrate
    entrypoint: ["docker-entrypoint.sh"]
    command: ["php-fpm"]
    extra_hosts:
      - host.docker.internal:host-gateway

  webserver:
    container_name: webserver
    build:
      context: ./webserver
      dockerfile: Dockerfile.local
      args:
        IMAGE_NAME: webfux/nginx
        IMAGE_TAG: 1.0.1
    depends_on:
      - php
      - database
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
    environment:
      - APP_DOMAIN=webfux.io
      - SUB_DOMAIN_FRONTEND=www.dev
      - SUB_DOMAIN_BACKEND=api.dev
    volumes:
# config + certs
      - ./webserver/.deploy/nginx/templates:/etc/nginx/templates/:ro
      - ./webserver/.deploy/nginx/certs/webfux.io.crt:/etc/ssl/certs/webfux.io.crt
      - ./webserver/.deploy/nginx/certs/webfux.io.key:/etc/ssl/private/webfux.io.key
# data
      - ./webserver/public:/var/html/webserver:ro
      - ./api/public:/var/html/api:ro
      - ./frontend:/var/html/frontend:ro

  database:
    container_name: database
    image: webfux/mariadb:1.0.0
    env_file:
      - .env
    # ports: only for local mode!
    # has to be removed in any other environment
    ports:
      - target: 3306
        published: 3366
        protocol: tcp
    # in any other mode, the port should never be published
    expose:
      - 3306
    volumes:
      # persist data (inside docker)
      - dbcontainer:/var/lib/mysql:rw
    command: --character-set-server=utf8 --collation-server=utf8_general_ci

volumes:
  # persist data (inside docker)
  dbcontainer:
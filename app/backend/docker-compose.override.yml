version: "3.4"

services:
  webserver:
    container_name: webserver
    build:
      context: .
      args:
        IMAGE_NAME: php-xdebug
        IMAGE_TAG: 1.0.0
        NGINX_IMAGE_NAME: nginx
        NGINX_IMAGE_TAG: 1.0.0
      target: webserver
# restart: on-failure
    ports:
      - target: 80
        published: 8088
    volumes:
      - ./docker/nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/app/public

  php:
    container_name: php
    build:
      context: .
      args:
        IMAGE_NAME: php-xdebug
        IMAGE_TAG: 1.0.0
      target: local
    env_file:
      - ./.env.local
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # database service name
      MYSQL_HOST: database
    volumes:
      - .:/var/app
    # image is alpine base: command => sh -c
    # - composer install (requires composer.json)
    # - run php-fpm --allow-to-run-as-root
    command: sh -c "composer install && php-fpm --allow-to-run-as-root"

  database:
    container_name: database
    image: mariadb:1.0.0
#    restart: on-failure
    env_file:
      - ./.env.local
    environment:
      MYSQL_ROOT_PASSWORD: abc1234
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - target: 3306
        published: 3366
    volumes:
      # persist data (inside docker)
      - dbcontainer:/var/lib/mysql
    command: --character-set-server=utf8 --collation-server=utf8_general_ci

volumes:
  # persist data (inside docker)
  dbcontainer:
